{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,QACnCE,QAAQC,IAAIF,GACZA,EAAIG,UAAW,EAIfN,EAAKO,iBAAiB,UACtB,SAAsBC,G,oBASlBC,YAAW,WACT,IAiCmBC,EAAUC,GAAVD,EAjCWE,EAiCDD,EAjCIE,EAkCfC,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,CACrBP,SAAUA,EACVQ,MAAOP,IAMIK,QAAQG,OAAO,CACpBT,SAAUA,EACVQ,MAAOP,KA7CLS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUQ,EAAKG,EAALH,MAExBI,EAAAxB,GAASyB,OAAOC,QACd,sBAAqCC,OAAff,EAAS,QAAYe,OAANP,EAAM,M,IAI5CQ,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUQ,EAAKG,EAALH,MAClBI,EAAAxB,GAASyB,OAAOI,QACd,qBAAoCF,OAAff,EAAS,QAAYe,OAANP,EAAM,M,IAO7CU,SAAQ,WAEHhB,IAAMiB,IACR1B,EAAIG,UAAW,EAEfN,EAAK8B,Q,MAGfjB,E,EAnCAL,EAAMuB,iBACJ5B,EAAIG,UAAW,EACjBH,EAAIG,UAAW,EAKf,IAJA,IAAM0B,GAAchC,EAAKkB,MAAMe,MACzBC,GAAalC,EAAKW,KAAKsB,MACvBJ,GAAe7B,EAAKmC,OAAOF,MAExBG,EAAI,EAAGC,EAAOL,EAAYI,GAAKP,EAAaO,GAAK,EAAGC,GAASH,EAASI,EAAAF,EAAAC,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\")\nconst btn = document.querySelector(\"#btn\")\nconsole.log(btn);\nbtn.disabled = false;\n\n\n\nform.addEventListener(\"submit\", handleSubmit)\nfunction handleSubmit(event) {\n  event.preventDefault(); \n    btn.disabled = true;\n  btn.disabled = true;\n  const delayValue = +form.delay.value;\n  const stepValue = +form.step.value;\n  const amountValue = +form.amount.value;\n\n  for (let i = 1, delay =delayValue; i <= amountValue; i += 1, delay += stepValue){\n    setTimeout(() => {\n      const promise = createPromise(i, delay)\n\n      promise.then(({ position, delay }) => {\n        // console.log(` Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          ` Fulfilled promise ${position} in ${delay}ms`,\n\n        );\n      })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            ` Rejected promise ${position} in ${delay}ms`,\n \n          );\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        \n\n        })\n        .finally(() => {\n          // Enable the button when all promises have settled\n          if (i === amountValue) {\n            btn.disabled = false;\n            // Reset the form fields\n            form.reset();\n          }\n        })\n},delay)\n\n}\n\n  \n\n  }\n  function createPromise(position, step) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n  \n    return Promise.resolve({\n      position: position,\n      delay: step\n\n    });\n  }\n  else {\n  \n          return Promise.reject({\n            position: position,\n            delay: step\n          });\n\n    }\n    }\n\n\n\n\n\n\n\n//   if (selectedDates[0].getTime() - options.defaultDate.getTime() < 0) {\n// Notiflix.Notify.failure(\n//   'Please choose a date in the future',\n//   {\n//     timeout: 2000,\n//   },\n// );\n//  startBtn.disabled = true;\n// } else {\n//           startBtn.disabled = false;\n// }\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btn","console","log","disabled","addEventListener","event","setTimeout","position","step","i","delay1","Math","random","Promise","resolve","delay","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","amountValue","reset","preventDefault","delayValue","value","stepValue","amount","i1","delay11","_loop"],"version":3,"file":"03-promises.d38d1649.js.map"}